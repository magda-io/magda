apiVersion: apps/v1
kind: Deployment
metadata:
  name: opa
spec:
  replicas: {{ .Values.replicas }} # default 1 in the values file
  strategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.global.rollingUpdate.maxUnavailable | default 0 }}
  selector:
    matchLabels:
      service: opa
  template:
    metadata:
      labels:
        service: opa
      annotations:
         "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
    spec:
      {{- include "magda.imagePullSecrets" (dict "image" .Values.image) | indent 6 }}
{{- if and (.Capabilities.APIVersions.Has "scheduling.k8s.io/v1") .Values.global.enablePriorityClass }}
      priorityClassName: magda-8
{{- end }}
      initContainers:
      - name: policy-files-loader
        image: {{ include "magda.image" (dict "image" .Values.loaderImage) | quote }}
        imagePullPolicy: {{ include "magda.imagePullPolicy" (dict "image" .Values.loaderImage) | quote }}
        env:
          - name: DEFAULT_CFG_MAP_DIR
            value: "/opa-raw-default-policy-data-files"
          - name: TARGET_DIR
            value: "/opa-data/policies"
          - name: EXTRA_CFG_MAP_DIR
            value: "/opa-raw-policy-data-files"
        volumeMounts:
          - name: policy-dir
            mountPath: /opa-data/policies
          - name: default-opa-policies
            mountPath: /opa-raw-default-policy-data-files
            readOnly: true
          {{- range .Values.customPolicyConfigMaps }}
          - name: {{.}}
            mountPath: /opa-raw-policy-data-files
            readOnly: true
          {{- end }}
      containers:
      - name: opa
        image: {{ include "magda.image" . | quote }}
        imagePullPolicy: {{ include "magda.imagePullPolicy" . | quote }}
        args:
        - "run"
        - "--ignore=.*"  # exclude hidden dirs created by Kubernetes
        - "--server"
        - "/opa-data/policies"
        ports:
        - containerPort: 8181
        readinessProbe:
          httpGet:
            path: "/health"
            port: 8181
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
{{- if .Values.global.enableLivenessProbes }}
        livenessProbe:
          httpGet:
            path: "/health"
            port: 8181
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 10
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: policy-dir
          mountPath: /opa-data/policies
      volumes:
      - name: policy-dir
        emptyDir: {}
      - name: default-opa-policies
        configMap:
          name: default-opa-policies
      {{ range .Values.customPolicyConfigMaps -}}
      - name: {{.}}
        configMap:
          name: {{.}}
      {{ end }}
