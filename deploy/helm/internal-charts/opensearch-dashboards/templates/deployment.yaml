apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "magda.fullname" . | quote }}
  labels: 
    {{- include "magda.common.labels.standard" . | nindent 4 -}}
  {{- with .Values.dashboardAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
{{- if not .Values.autoscaling.hpa.enabled }}
  replicas: {{ .Values.replicas | default 1 }}
{{- end }}
  strategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.global.rollingUpdate.maxUnavailable | default 0 }}
  selector:
    matchLabels:
      {{- include "magda.common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "magda.common.labels.standard" . | nindent 8 }}
      {{- if or (empty .Values.podAnnotations | not) (empty .Values.config | not) }}
      annotations:
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- /* This forces a restart if the configmap has changed */}}
        {{- if .Values.config }}
        configchecksum: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum | trunc 63 }}
        {{- end }}
      {{- end }}
    spec:
{{- if and .Values.priorityClassName .Values.global.enablePriorityClass }}
      priorityClassName: {{ .Values.priorityClassName }}
{{- end }}
      securityContext:
{{ toYaml .Values.podSecurityContext | indent 8 }}
      {{- if and .Values.rbac.create (eq .Values.rbac.serviceAccountName "") }}
      serviceAccountName: {{ include "magda.fullname" . | quote }}
      automountServiceAccountToken: {{ ne .Values.rbac.automountServiceAccountToken false }}
      {{- else if and .Values.rbac.create (ne .Values.rbac.serviceAccountName "") }}
      serviceAccountName: {{ .Values.rbac.serviceAccountName | quote }}
      automountServiceAccountToken: {{ ne .Values.rbac.automountServiceAccountToken false }}
      {{- else }}
      automountServiceAccountToken: {{ ne .Values.rbac.automountServiceAccountToken false }}
      {{- end }}
      {{- if .Values.hostAliases }}
      hostAliases: {{ toYaml .Values.hostAliases | nindent 6 }}
      {{- end }}
      volumes:
        {{- if .Values.config }}
        - name: config
          configMap:
            name: "{{ template "magda.fullname" . }}-config"
            {{- if .Values.opensearchDashboardsYml.defaultMode }}
            defaultMode: {{ .Values.opensearchDashboardsYml.defaultMode }}
            {{- end }}
        {{- end }}
        {{- if .Values.extraVolumes }}
        # Currently some extra blocks accept strings
        # to continue with backwards compatibility this is being kept
        # whilst also allowing for yaml to be specified too.
        {{- if eq "string" (printf "%T" .Values.extraVolumes) }}
{{ tpl .Values.extraVolumes . | indent 8 }}
        {{- else }}
{{ toYaml .Values.extraVolumes | indent 8 }}
        {{- end }}
        {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
{{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
    {{- end }}
      {{- include "magda.imagePullSecrets" . | indent 6 }}
      {{- if .Values.extraInitContainers }}
      # Currently some extra blocks accept strings
      # to continue with backwards compatibility this is being kept
      # whilst also allowing for yaml to be specified too.
      initContainers:
      {{- if eq "string" (printf "%T" .Values.extraInitContainers) }}
{{ tpl .Values.extraInitContainers . | indent 6 }}
      {{- else }}
{{ toYaml .Values.extraInitContainers | indent 6 }}
      {{- end }}
      {{- end }}
      containers:
      - name: dashboards
        securityContext:
{{ toYaml .Values.securityContext | indent 10 }}
        image: {{ include "magda.image" . | quote }}
        imagePullPolicy: {{ include "magda.imagePullPolicy" . | quote }}
        {{- if .Values.readinessProbe }}
        readinessProbe:
{{ toYaml .Values.readinessProbe | indent 10 }}
        {{- end }}
        {{- if .Values.livenessProbe }}
        livenessProbe:
{{ toYaml .Values.livenessProbe | indent 10 }}
        {{- end }}
        {{- if semverCompare ">=1.16-0" .Capabilities.KubeVersion.Version }}
        {{- if .Values.readinessProbe }}
        startupProbe:
{{ toYaml .Values.startupProbe | indent 10 }}
        {{- end }}
        {{- end }}
        env:
        {{- if .Values.opensearchURL }}
        - name: OPENSEARCH_URL
          value: {{ .Values.opensearchURL | quote }}
        {{- else if .Values.opensearchHosts }}
        - name: OPENSEARCH_HOSTS
          value: {{ .Values.opensearchHosts | mustToRawJson | quote }}
        {{- end }}
        - name: SERVER_HOST
          value: {{ .Values.serverHost | quote }}
        {{- if .Values.opensearchAccount.secret }}
        - name: OPENSEARCH_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.opensearchAccount.secret }}
              key: username
        - name: OPENSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.opensearchAccount.secret }}
              key: password
        {{- if and .Values.opensearchAccount.keyPassphrase.enabled }}
        - name: KEY_PASSPHRASE
          valueFrom:
            secretKeyRef:
              name: {{ .Values.opensearchAccount.secret }}
              key: keypassphrase
            # 32-character random string to be used as cookie password by security plugin
        {{- end }}
        - name: COOKIE_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.opensearchAccount.secret }}
              key: cookie
        {{- end }}
{{- if .Values.extraEnvs }}
{{ toYaml .Values.extraEnvs | indent 8 }}
{{- end }}
{{- if .Values.envFrom }}
        envFrom:
{{ toYaml .Values.envFrom | indent 10 }}
{{- end }}
        ports:
        - containerPort: {{ .Values.service.port }}
          name: {{ .Values.service.httpPortName | default "http" }}
          protocol: TCP
{{- if .Values.plugins.enabled }}
        command:
          - sh
          - -c
          - |
            #!/usr/bin/bash
            set -e
            {{- range $plugin := .Values.plugins.installList }}
            ./bin/opensearch-dashboards-plugin install {{ $plugin }}
            {{- end }}
            bash opensearch-dashboards-docker-entrypoint.sh opensearch-dashboards
{{- end }}
{{- if .Values.lifecycle }}
        lifecycle:
{{ toYaml .Values.lifecycle | indent 10 }}
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
          {{- range $path, $config := .Values.config }}
          - name: config
            mountPath: /usr/share/opensearch-dashboards/config/{{ $path }}
            subPath: {{ $path }}
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
          # Currently some extra blocks accept strings
          # to continue with backwards compatibility this is being kept
          # whilst also allowing for yaml to be specified too.
          {{- if eq "string" (printf "%T" .Values.extraVolumeMounts) }}
{{ tpl .Values.extraVolumeMounts . | indent 10 }}
         {{- else }}
{{ toYaml .Values.extraVolumeMounts | indent 10 }}
          {{- end }}
          {{- end }}
      {{- if .Values.extraContainers }}
      # Currently some extra blocks accept strings
      # to continue with backwards compatibility this is being kept
      # whilst also allowing for yaml to be specified too.
      {{- if eq "string" (printf "%T" .Values.extraContainers) }}
{{ tpl .Values.extraContainers . | indent 6 }}
      {{- else }}
{{ toYaml .Values.extraContainers | indent 6 }}
      {{- end }}
      {{- end }}