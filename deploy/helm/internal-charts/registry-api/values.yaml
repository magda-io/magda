global: {}
image: 
  name: "magda-registry-api"
  # repository: 
  # tag: 
  # pullPolicy: 
  # pullSecrets: 

defaultImage:
  repository: "ghcr.io/magda-io"
  pullPolicy: IfNotPresent
  pullSecrets: false

# autoscaler is only for readonly instance
autoscaler:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
livenessProbe: {}
resources: 
  requests:
    cpu: 250m
    memory: 500Mi
  limits:
    cpu: 750m
deployments:
  # -- deployment config for full registry instance.
  # You can also specify different `resources` config under this key.
  full:
    replicas: 1

    # -- Default request timeout for full instance
    requestTimeout: 60s

    # -- Default idle timeout for full instance.
    # Make sure `idleTimeout` is longer than `requestTimeout`
    idleTimeout: 60s
  
  # -- deployment config for readonly registry instances.
  # You can also specify different `resources` config under this key.
  readOnly:
    enable: false
    # -- no. of replicates. Its value must no lower than `minReplicas`
    replicas: 1

    # -- Default request timeout for readonly instance
    requestTimeout: 60s

    # -- Default idle timeout for readonly instance.
    # Make sure `idleTimeout` is longer than `requestTimeout`
    idleTimeout: 60s

aspectDefinitionMigrator:
  enabled: true
  backoffLimit: 6
  image: 
    name: magda-migrator-registry-aspects
    # repository: 
    # tag: 
    # pullPolicy: 
    # pullSecrets: 

# -- application config. Allow to configure any application config fields.
# For all available configuration fields and their default values, please refer to [application.conf](https://github.com/magda-io/magda/blob/main/magda-registry-api/src/main/resources/application.conf)
# This config field is available since v2.2.5
# Previous versions supported config fields: `.Values.validateJsonSchema`, `.Values.db.poolInitialSize`, `.Values.db.poolMaxSize` and 
# `.Values.db.poolConnectionTimeoutMillis` are still supported for backward compatible reason (although deprecated).
# When exist, values from those obsolete config fields will override relevant fields in `.Values.appConfig`.
# Obsolete config fields: `.Values.logLevel`, `.Values.skipAuthorization` and `.Values.printSQlInConsole` are not supported anymore.
# Please config using alternative fields via `.Values.appConfig` instead.
appConfig:
  http: 
    port: 6101
  db:
    default:
      url: jdbc:postgresql://registry-db/postgres
  authApi:
    baseUrl: http://authorization-api
  scalikejdbc:
    global:
      loggingSQLAndTime:
        # -- Whether print all SQL in console. For DEBUG only
        enabled: false
  authorization:
    # -- Skip asking authorization decisions from policy engine.
    # `UnconditionalTrueDecision` will be always returned for this case
    # Useful when running locally - DO NOT TURN ON IN PRODUCTION 
    skipOpaQuery: false
  # -- Whether registry api should validate incoming JSON data
  validateJsonSchema: true
  # -- whether print out full config data at application starting up
  # for debug purpose only
  printFullConfig: false
