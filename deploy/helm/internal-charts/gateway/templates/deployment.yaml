apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.global.rollingUpdate.maxUnavailable | default 0 }}
  replicas: {{ .Values.replicas | default 1 }}
  selector:
    matchLabels:
      service: gateway
  template:
    metadata:
      annotations:
        checksum/routes: {{ .Values.routes | default .Values.defaultRoutes | mustToRawJson | sha256sum }}
        checksum/webRoutes: {{ .Values.webRoutes | default dict | mustToRawJson | sha256sum }}
        checksum/helmet: {{ .Values.helmet | default dict | mustToRawJson | sha256sum }}
        checksum/cors: {{ .Values.cors | default dict | mustToRawJson | sha256sum }}
        checksum/csp: {{ .Values.csp | default dict | mustToRawJson | sha256sum }}
        checksum/cookie: {{ .Values.cookie | default dict | mustToRawJson | sha256sum }}
        checksum/authPlugins: {{ .Values.authPlugins | default list | mustToRawJson | sha256sum }}
        checksum/defaultWebRouteConfig: {{ .Values.defaultWebRouteConfig | default dict | mustToRawJson | sha256sum }}
      labels:
        service: gateway
    spec:
{{- if and (.Capabilities.APIVersions.Has "scheduling.k8s.io/v1") .Values.global.enablePriorityClass }}
      priorityClassName: magda-10
{{- end }}
      {{- include "magda.imagePullSecrets" . | indent 6 }}
      containers:
      - name: gateway
        image: {{ include "magda.image" . | quote }}
        imagePullPolicy: {{ include "magda.imagePullPolicy" . | quote }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        command: [
            "node",
            "/usr/src/app/component/dist/index.js",
            "--listenPort", "80",
            "--externalUrl", {{ .Values.global.externalUrl | quote }},
            {{- if .Values.ckanRedirectionDomain }}
            "--ckanRedirectionDomain", {{ .Values.ckanRedirectionDomain | quote }},
            {{- end }}
            {{- if .Values.ckanRedirectionPath }}
            "--ckanRedirectionPath", {{ .Values.ckanRedirectionPath | quote }},
            {{- end }}
            "--dbHost", "session-db",
            "--dbPort", "5432",
{{- if .Values.enableAuthEndpoint }}
            "--enableAuthEndpoint", {{ .Values.enableAuthEndpoint | quote }},
{{- end }}
{{- if .Values.enableWebAccessControl }}
            "--enableWebAccessControl", {{ .Values.enableWebAccessControl | quote }},
{{- end }}
{{- if .Values.enableHttpsRedirection }}
            "--enableHttpsRedirection", {{ .Values.enableHttpsRedirection | quote }},
{{- end }}
{{- if .Values.enableCkanRedirection }}
            "--enableCkanRedirection", {{ .Values.enableCkanRedirection | quote }},
{{- end }}
{{- if not (kindIs "invalid" .Values.registryQueryCacheStdTTL) }}
            "--registryQueryCacheStdTTL", {{ .Values.registryQueryCacheStdTTL | quote }},
{{- end }}
{{- if .Values.registryQueryCacheMaxKeys }}
            "--registryQueryCacheMaxKeys", {{ .Values.registryQueryCacheMaxKeys | quote }},
{{- end }}
            "--proxyRoutesJson", "/etc/config/routes.json",
            "--webProxyRoutesJson", "/etc/config/webRoutes.json",
            "--helmetJson", "/etc/config/helmet.json",
            "--cspJson", "/etc/config/csp.json",
            "--corsJson", "/etc/config/cors.json",
            "--cookieJson", "/etc/config/cookie.json",
            "--authPluginConfigJson", "/etc/config/authPlugins.json",
            "--web", {{ .Values.web | default "http://web" | quote }},
            "--defaultWebRouteConfig", "/etc/config/defaultWebRouteConfig.json",
            "--authorizationApi", "http://authorization-api/v0",
{{- if .Values.skipAuth }}
            "--skipAuth", "true",
{{- end }}
            "--tenantUrl", "http://tenant-api/v0",
{{- if .Values.global.openfaas }}
{{- if .Values.global.openfaas.mainNamespace }}
            "--openfaasGatewayUrl", {{ include "magda.openfaasGatewayUrl" . | quote }},
{{- end }}
{{- end }}
{{- if .Values.global.enableMultiTenants }}
            "--enableMultiTenants", "true",
{{- else }}
            "--enableMultiTenants", "false",
{{- end }}
{{- if .Values.global.magdaAdminPortalName }}
            "--magdaAdminPortalName", {{ .Values.global.magdaAdminPortalName | quote }},
{{- else if .Values.magdaAdminPortalName }}
            "--magdaAdminPortalName", {{ .Values.magdaAdminPortalName | quote }},
{{- end }}
{{- if .Values.defaultCacheControl }}
            "--defaultCacheControl", {{ .Values.defaultCacheControl | quote }},
{{- end }}
{{- if .Values.proxyTimeout }}
            "--proxyTimeout", {{ .Values.proxyTimeout | quote }},
{{- end }}
        ]
        volumeMounts:
          - name: config
            mountPath: /etc/config
{{- if .Values.global.enableLivenessProbes }}
        livenessProbe:
          httpGet:
            path: /status/live
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /status/ready
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: NODE_ENV
          value: production
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: jwt-secret
{{- if .Values.enableWebAccessControl }}
        - name: WEB_ACCESS_USERNAME
          valueFrom:
            secretKeyRef:
              name: web-access-secret
              key: username
        - name: WEB_ACCESS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: web-access-secret
              key: password
{{- end }}
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: session-secret
        - name: USER_ID
          value: {{ .Values.global.defaultAdminUserId }}
        {{- include "magda.db-client-credential-env" (dict "dbName" "session-db" "root" .) | indent 8 }}
      volumes:
        - name: config
          configMap:
            name: gateway-config
