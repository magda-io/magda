{{- if .Values.production }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: es-master
  labels:
    component: elasticsearch
    role: master
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  replicas: {{ .Values.master.replicas | default 3 }}
  selector:
    matchLabels:
      component: elasticsearch
      role: master
  template:
    metadata:
      labels:
        component: elasticsearch
        role: master
      annotations:
         "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
    spec:
      {{- include "magda.elasticsearch.initContainer" . | indent 6 }}
      {{- include "magda.imagePullSecrets" . | indent 6 }}
{{- if and (.Capabilities.APIVersions.Has "scheduling.k8s.io/v1") .Values.global.enablePriorityClass }}
      priorityClassName: magda-9
{{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - elasticsearch
                - key: role
                  operator: In
                  values:
                  - master
              topologyKey: kubernetes.io/hostname
      containers:
      - name: es-master
        resources:
{{ toYaml .Values.master.resources | indent 10 }}
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
        image: {{ include "magda.image" . | quote }}
        imagePullPolicy: {{ include "magda.imagePullPolicy" . | quote }}
        readinessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 30
          periodSeconds: 10
{{- if .Values.global.enableLivenessProbes }}
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 300
          periodSeconds: 60
{{- end }}
        env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: "CLUSTER_NAME"
          value: "myesdb"
        - name: NODE_MASTER
          value: "true"
        - name: NODE_DATA
          value: "false"
        - name: HTTP_ENABLE
          value: "false"
        - name: discovery.zen.minimum_master_nodes
          value: "2"
        - name: NODE_INGEST
          value: "false"
        - name: "ES_PLUGINS_INSTALL"
          value: {{ .Values.client.pluginsInstall | quote }}
        - name: NETWORK_HOST
          value: "0.0.0.0"
        - name: DISCOVERY_SERVICE
          value: elasticsearch-discovery
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: storage
          mountPath: /data
      volumes:
      - emptyDir:
          medium: ""
        name: "storage"
{{- end }}
