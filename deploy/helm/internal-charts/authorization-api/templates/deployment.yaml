apiVersion: apps/v1
kind: Deployment
metadata:
  name: authorization-api
spec:
  replicas: {{ .Values.replicas | default 1 }}
  strategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.global.rollingUpdate.maxUnavailable | default 0 }}
  selector:
    matchLabels:
      service: authorization-api
  template:
    metadata:
      labels:
        service: authorization-api
      annotations:
         "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
    spec:
{{- if and (.Capabilities.APIVersions.Has "scheduling.k8s.io/v1") .Values.global.enablePriorityClass }}
      priorityClassName: magda-8
{{- end }}
      {{- include "magda.imagePullSecrets" . | indent 6 }}
      containers:
      - name: authorization-api
        image: {{ include "magda.image" . | quote }}
        imagePullPolicy: {{ include "magda.imagePullPolicy" . | quote }}
        ports:
        - containerPort: 80
        command: [
            "node",
            "/usr/src/app/component/dist/index.js",
            "--listenPort", "80",
            "--dbHost", "authorization-db",
            "--dbPort", "5432",
            "--registryApiUrl", "http://registry-api/v0",
            "--opaUrl", "http://localhost:8181/",
{{- if .Values.debug }}
            "--debug", "true",
{{- end }}
{{- if .Values.skipAuth }}
            "--skipAuth", "true",
{{- end }}
            "--tenantId", "0"
        ]
{{- if .Values.global.enableLivenessProbes }}
        livenessProbe:
          httpGet:
            path: /v0/status/live
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /v0/status/ready
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: NODE_ENV
          value: production
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: jwt-secret
        - name: USER_ID
          value: {{ .Values.global.defaultAdminUserId }}
        {{- include "magda.db-client-credential-env" (dict "dbName" "authorization-db" "root" .) | indent 8 }}
      - name: opa
        {{- $imageEnv := omit . "Values" }}
        {{- $_ := set $imageEnv "Values" (omit .Values "image") }}
        {{- $_ := set $imageEnv.Values "image" .Values.opa.image }}
        image: {{ include "magda.image" $imageEnv | quote }}
        imagePullPolicy: {{ include "magda.imagePullPolicy" $imageEnv | quote }}
        ports:
        - containerPort: 8181
        readinessProbe:
          httpGet:
            path: "/health"
            port: 8181
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
{{- if .Values.global.enableLivenessProbes }}
        livenessProbe:
          httpGet:
            path: "/health"
            port: 8181
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
{{- end }}
        resources:
{{ toYaml .Values.opa.resources | indent 10 }}
{{- if .Values.opa.customPolicyConfigMaps | empty | not }}
        volumeMounts:
        - name: policy-dir
          mountPath: /opa-data/policies
{{- end }}
{{- if .Values.opa.customPolicyConfigMaps | empty | not }}
      initContainers:
      - name: policy-files-loader
        {{- $imageEnv := omit . "Values" }}
        {{- $_ := set $imageEnv "Values" (omit .Values "image") }}
        {{- $_ := set $imageEnv.Values "image" .Values.opa.loaderImage }}
        image: {{ include "magda.image" $imageEnv | quote }}
        imagePullPolicy: {{ include "magda.imagePullPolicy" $imageEnv | quote }}
        env:
          - name: DEFAULT_CFG_MAP_DIR
            value: "/opa-raw-policy-data-files"
          - name: TARGET_DIR
            value: "/opa-data/policies"
        volumeMounts:
          - name: policy-dir
            mountPath: /opa-data/policies
          {{- range .Values.customPolicyConfigMaps }}
          - name: {{.}}
            mountPath: /opa-raw-policy-data-files
            readOnly: true
          {{- end }}
{{- end }}
{{- if .Values.opa.customPolicyConfigMaps | empty | not }}
      volumes:
      - name: policy-dir
        emptyDir: {}
      {{ range .Values.customPolicyConfigMaps -}}
      - name: {{.}}
        configMap:
          name: {{.}}
      {{ end }}
{{- end }}
