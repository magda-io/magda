apiVersion: apps/v1
kind: Deployment
metadata:
  name: tenant-api
spec:
  replicas: {{ .Values.replicas | default 1 }}
  strategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.global.rollingUpdate.maxUnavailable | default 0 }}
  selector:
    matchLabels:
      service: tenant-api
  template:
    metadata:
      labels:
        service: tenant-api
    spec:
{{- if and (.Capabilities.APIVersions.Has "scheduling.k8s.io/v1") .Values.global.enablePriorityClass }}
      priorityClassName: magda-8
{{- end }}
      {{- include "magda.imagePullSecrets" . | indent 6 }}
      containers:
      - name: tenant-api
        image: {{ include "magda.image" . | quote }}
        imagePullPolicy: {{ include "magda.imagePullPolicy" . | quote }}
        command: [
            "node",
            "/usr/src/app/component/dist/index.js",
            "--listenPort", "80",
            "--dbHost", "tenant-db",
            "--dbPort", "5432",
{{- if .Values.debug }}
            "--debug", "true",
{{- end }}
{{- if .Values.skipAuth }}
            "--skipAuth", "true",
{{- end }}
            "--authApiUrl", "http://authorization-api/v0"
        ]
{{- if .Values.global.enableLivenessProbes }}
        livenessProbe:
          httpGet:
            path: /v0/status/live
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /v0/status/ready
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: NODE_ENV
          value: production
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: jwt-secret
        {{- include "magda.db-client-credential-env" (dict "dbName" "tenant-db" "root" .) | indent 8 }}
