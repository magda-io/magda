global:
  postgresql:
    # -- PostgreSQL username
    # For in-k8s PostgreSQL, a user account will be auto-created with superuser privileges when username is `postgres`.
    # It's recommended use superuser `postgres` for both in-k8s PostgreSQL or cloud provider DB services (e.g. CloudSQL or AWS RDS).
    # This user will only be used for DB schema migrators to cerate DB schema and restricted DB accounts that are used by Magda internal services to access DB.
    # If you have to use a user account rather than `postgres`, the user account needs to have sufficient permissions to run all DB migration scripts ([e.g. here](https://github.com/magda-io/magda/tree/master/magda-migrator-registry-db/sql)).
    # Note: Until the ticket #3126 is fixed, using a DB username rather than `postgres` will trigger an error when content DB migrate runs.
    postgresqlUsername: "postgres"

    # -- the secret that contains privileged PostgreSQL account password.
    # The password will be loaded from key "postgresql-password" of the secret data.
    # Previously (before v1.0.0), we used to load the password from "cloudsql-db-credentials" secret `password` field when use cloud provider DB services.
    # Since v1.0.0, our helm chart can auto-create the secret and copy the content of "cloudsql-db-credentials" secret when:
    # <ul>
    #   <li> "autoCreateSecret" is set to true</li>
    #   <li> "cloudsql-db-credentials" exists </li>
    # </ul>
    # for backward compatibility purposes.
    existingSecret: "db-main-account-secret"

    # -- When `true`, secret with name specified by `existingSecret` will be auto-created.
    # When in-k8s PostgreSQL instance is used, the secret will be filled with auto-generated random password.
    # Otherwise, the secret will only be auto created when "cloudsql-db-credentials" secret exist.
    # And its content, for this case, will be copied from "cloudsql-db-credentials" secret, `password` field for backward compatibility purposes.
    # Please note: when the secret (specified by `existingSecret`) exists, the auto-create feature will leave the password unchanged.
    autoCreateSecret: true

  useCombinedDb: true
  # -- When `useCombinedDb` = false, setting any key to true will create an in-k8s DB instance for the particular database.
  # Please note: you must set `useCombinedDb` = false before set any of the field to `true`.
  # Otherwise, all db requests will still be forwarded to the combined DB instance other than each individual database instance.
  useInK8sDbInstance:
    authorization-db: false
    content-db: false
    registry-db: false
    session-db: false
    tenant-db: false

  # -- whether to use Google Cloud SQL database. 
  # When this option is on, all other database type e.g. `useCombinedDb` & `useAwsRdsDb` must be turned off.
  useCloudSql: false
  
  # -- whether to use AWS RDS DB config. 
  # When this option is on, all other database type e.g. `useCombinedDb` & `useCloudSql` must be turned off.
  useAwsRdsDb: false
  
  # -- AWS RDS DB instance access endpoint. e.g. xxxx.xxxx.ap-southeast-2.rds.amazonaws.com.
  # Compulsory if `useAwsRdsDb` = true
  awsRdsEndpoint: 
  
  externalUrl: "http://localhost:6100"
  rollingUpdate:
    maxUnavailable: 0
  exposeNodePorts: false
  enableMultiTenants: false
  image:
    # When we don't specify tag here, .Chart.version will be used --- which is easier for versioning
    # You still can specify a tag here to override the default `.Chart.version` value (e.g. for local debugging)
    # tag: xxxxxxx
    repository: "data61"
    pullPolicy: IfNotPresent
  defaultAdminUserId: "00000000-0000-4000-8000-000000000000"
  logLevel: INFO
  namespace: default
  gapiIds: []
  # -- whether enable magda priority class. 
  # When `true`, Magda will create priorityClassName from "magda-10" to "magda-0"
  # where "magda-10" indicates the highest priority. 
  # At this moment, "magda-10" is only allocated to gateway.
  # Please note: When you use in-k8s postgreSQL, you need to manually set the priority class for db instance to `magda-9` 
  # as it currently has no priority class set by default. 
  # Other components will be auto-assigned appropriate priority class when `enablePriorityClass` is on.
  enablePriorityClass: false
  # -- the redirection url after the whole authentication process is completed.
  # Authentication Plugins will use this value as default setting.
  # The following query parameters might be present to supply the authentication result:
  # <ul>
  # <li>result: (string) Compulsory. Possible value: "success" or "failure". </li>
  # <li>errorMessage: (string) Optional. Text message to provide more information on the error to the user. </li>
  # </ul>
  # The default built-in landing "/sign-in-redirect" route supports an additional `redirectTo` query parameter.
  # If this parameter not presents, the user will be redirected further to the frontend route `/account` which is the account page .
  # Otherwise, user will redirected to the url path specified by `redirectTo` query parameter.
  # Please note: `redirectTo` only accept an URL path (e.g. `/a/b/c`). External domain urls are not supported. 
  # You can config `authPluginRedirectUrl` to an full URL string rather than a URL path (which imply current domain).
  # However, unless an external domain is added to `authPluginAllowedExternalRedirectDomains`, an auth plugin should never redirect the user to the external domain.
  authPluginRedirectUrl: "/sign-in-redirect"

  # -- By default, at end of authentication process, an auth plugin will never redirect the user to an external domain, 
  # even if `authPluginRedirectUrl` is configured to an URL with an external domain.
  # Unless an external domain is added to the whitelist i.e. this `authPluginAllowedExternalRedirectDomains` config, 
  # any auth plugins will always ignore the domain part of the url (if supplied) and only redirect the user to the URL path under the current domain.
  # Please note: you add a url host string to this list. e.g. "abc.com:8080"
  authPluginAllowedExternalRedirectDomains: []

  # -- The name of the bucket to store datasets in by default
  defaultDatasetBucket: "magda-datasets"

  # -- Whether or not enabled livenessProbes on all services
  enableLivenessProbes: false

# -- Whether or not auto create a k8s secrets named `auth-secrets` that contains:
# <ul>
# <li> JWT secret, under key: `jwt-secret`. Used internally by Magda gateway to issue JWT token.</li>
# <li> Session secret, under key: `session-secret`. Used by Magda gateway for managing session data.</li>
# </ul>
# The auto generated secrets will be 32 chars (256bits) long.
autoCreateAuthSecrets: true

# -- (object) Control on/ off of each modules. 
# To turn on/off openfaas, please set value to `global.openfaas.enabled`
# @default -- see default value of each individual tag below.
tags:
  # tags.priorities -- whether or not deploy Magda defined PriorityClass. Useful to schedule different payload on different nodes.
  priorities: true

  # tags.all -- Set to `true` to turn on all default modules. 
  # When `tags.all` is `false`, a default module will only be turned off when the corresponding module tag is `false` as well. 
  # Please note: since v1.0.0, correspondence-api is not part of default modules anymore. 
  all: true

  # tags.cloud-sql-proxy -- turn on / off [cloud-sql-proxy](../internal-charts/cloud-sql-proxy/README.md)
  cloud-sql-proxy: false
  
  # tags.apidocs-server -- turn on / off [apidocs-server](../internal-charts/apidocs-server/README.md)
  # Part of default modules. Only need to set to `true` to manually turn on when `tags.all` is false.
  apidocs-server: false
  
  # tags.admin-api -- turn on / off [admin-api](../internal-charts/admin-api/README.md)
  # Part of default modules. Only need to set to `true` to manually turn on when `tags.all` is false.
  admin-api: false
  
  # tags.authorization-api -- turn on / off [authorization-api](../internal-charts/authorization-api/README.md)
  # Part of default modules. Only need to set to `true` to manually turn on when `tags.all` is false.
  authorization-api: false
  
  # tags.authorization-db -- turn on / off [authorization-db](../internal-charts/authorization-db/README.md)
  # Part of default modules. Only need to set to `true` to manually turn on when `tags.all` is false.
  authorization-db: false
  
  # tags.combined-db -- turn on / off [combined-db](../internal-charts/combined-db/README.md)
  # Part of default modules. Only need to set to `true` to manually turn on when `tags.all` is false.
  combined-db: false
  
  # tags.content-api -- turn on / off [content-api](../internal-charts/content-api/README.md)
  # Part of default modules. Only need to set to `true` to manually turn on when `tags.all` is false.
  content-api: false
  
  # tags.content-db -- turn on / off [content-db](../internal-charts/content-db/README.md)
  content-db: false
  
  # tags.correspondence-api -- turn on / off [content-db](../internal-charts/correspondence-api/README.md)
  correspondence-api: false
  
  # tags.elasticsearch -- turn on / off [elasticsearch](../internal-charts/elasticsearch/README.md)
  # Part of default modules. Only need to set to `true` to manually turn on when `tags.all` is false.
  elasticsearch: false

  # tags.gateway -- turn on / off [gateway](../internal-charts/gateway/README.md)
  # Part of default modules. Only need to set to `true` to manually turn on when `tags.all` is false.
  gateway: false

  # tags.indexer -- turn on / off [indexer](../internal-charts/indexer/README.md)
  # Part of default modules. Only need to set to `true` to manually turn on when `tags.all` is false.
  indexer: false

  # tags.preview-map -- turn on / off [preview-map](https://github.com/magda-io/magda-preview-map)
  # Part of default modules. Only need to set to `true` to manually turn on when `tags.all` is false.
  preview-map: false

  # tags.registry-api -- turn on / off [registry-api](../internal-charts/registry-api/README.md)
  # Part of default modules. Only need to set to `true` to manually turn on when `tags.all` is false.
  registry-api: false

  # tags.registry-db -- turn on / off [registry-db](../internal-charts/registry-db/README.md)
  # Part of default modules. Only need to set to `true` to manually turn on when `tags.all` is false.
  registry-db: false

  # tags.search-api -- turn on / off [search-api](../internal-charts/search-api/README.md)
  # Part of default modules. Only need to set to `true` to manually turn on when `tags.all` is false.
  search-api: false

  # tags.search-api-node -- turn on / off [search-api-node](../internal-charts/search-api-node/README.md)
  # It's an experimental nodejs implementation of search-api. Should only be turned on for testing purposes.
  search-api-node: false

  # tags.session-db -- turn on / off [session-db](../internal-charts/session-db/README.md)
  # Part of default modules. Only need to set to `true` to manually turn on when `tags.all` is false.
  session-db: false

  # tags.web-server -- turn on / off [web-server](../internal-charts/web-server/README.md)
  # Part of default modules. Only need to set to `true` to manually turn on when `tags.all` is false.
  web-server: false

  # tags.ingress -- turn on / off [ingress](../internal-charts/ingress/README.md)
  ingress: false

  # tags.storage-api -- turn on / off [storage-api](../internal-charts/storage-api/README.md)
  # Part of default modules. Only need to set to `true` to manually turn on when `tags.all` is false.
  storage-api: false

  # tags.tenant-api -- turn on / off [tenant-api](../internal-charts/tenant-api/README.md)
  # Part of default modules. Only need to set to `true` to manually turn on when `tags.all` is false.
  tenant-api: false

  # tags.tenant-db -- turn on / off [tenant-db](../internal-charts/tenant-db/README.md)
  # Part of default modules. Only need to set to `true` to manually turn on when `tags.all` is false.
  tenant-db: false

  # -- turn on / off [rds-dev-proxy](../internal-charts/rds-dev-proxy/README.md)
  # It's only for accessing AWS RDS db for admin / testing purposes within the k8s cluster.
  rds-dev-proxy: false
