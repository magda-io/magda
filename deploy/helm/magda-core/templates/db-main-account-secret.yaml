{{- if .Values.global.postgresql.autoCreateSecret }}
{{- $secret := (lookup "v1" "Secret" .Release.Namespace .Values.global.postgresql.existingSecret) | default dict }}
{{- $legacySecret := (lookup "v1" "Secret" .Release.Namespace "cloudsql-db-credentials") | default dict }}
{{- /* only attempt to create secret when secret not exists or the existing secret is part of current helm release */}}
{{- if or (empty $secret) (include "magda.isPartOfRelease" (dict "objectData" $secret "root" .) | empty | not) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.postgresql.existingSecret | quote }}
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
{{- if $secret }}
  postgresql-password: {{ get (get $secret "data" | default dict) "postgresql-password" }}
{{- else if and $legacySecret (or .Values.global.useCloudSql .Values.global.useAwsRdsDb) }}
  postgresql-password: {{ get (get $legacySecret "data" | default dict) "password" }}
{{- else }}
  postgresql-password: {{ randAlphaNum 16 | b64enc | quote }}
{{- end }}
{{- end }}
{{- end }}