global:
  # For testing auth related feature, you need to set externalUrl to a HTTPs url. e.g. https://minikube.data.gov.au
  # See https://github.com/magda-io/magda/blob/master/docs/docs/how-to-setup-https-to-local-cluster.md
  # for how to setup https access.
  externalUrl: https://minikube.data.gov.au
  rollingUpdate:
    maxUnavailable: 1
  exposeNodePorts: true
  # Uncomment the section to make all magda core modules pull your test docker images from your local docker registry
  # Make sure you build & push the connector docker images to your local docker registry
  # image:
  #   repository: "localhost:5000/data61"
  #   tag: "latest"
  #   pullPolicy: Always
  useCloudSql: false
  useCombinedDb: true
  enablePriorityClass: false
  defaultContactEmail: "magda@mailinator.com"
  enableMultiTenants: false
  openfaas:
    # turn on / off openfaas
    # All openfaas dependents should check this field to decide deployment logic (`tags` unfortunately not available to ).
    # They choose to simply not deploy or prompt an error message via [helm required function](https://helm.sh/docs/howto/charts_tips_and_tricks/#know-your-template-functions)
    enabled: true
    # turn off auth over openfass gateway for ease of debugging
    allowAdminOnly: false
  
  # Uncomment the section to make url processors pull your test docker images from your local docker registry
  # Make sure you build & push the connector docker images to your local docker registry
  # urlProcessors:
  #   image:
  #     repository: "localhost:5000/data61"
  #     tag: "latest"
  #     pullPolicy: Always
  #     pullSecrets: false
  
  connectors:
    includeInitialJobs: true
    includeCronJobs: false
    # Uncomment the image section to make connectors pull your test docker images from your local docker registry
    # Make sure you build & push the connector docker images to your local docker registry
    # image:
    #   repository: "localhost:5000/data61"
    #   tag: "latest"
    #   pullPolicy: Always
    #   pullSecrets: false
  
  # Uncomment the section to make minions pull your test docker images from local docker registry
  # Make sure you build & push the connector docker images to your local docker registry
  # minions: 
  #   image:
  #     repository: "localhost:5000/data61"
  #     tag: "latest"
  #     pullPolicy: Always
  #     pullSecrets: false

magda:
  openfaas:
    faasnetes:
      imagePullPolicy: Always
  magda-core:
    gateway:
      ckanRedirectionDomain: "ckan.data.gov.au"
      ckanRedirectionPath: ""
      enableCkanRedirection: false
      enableAuthEndpoint: true
      cors:
        credentials: true
        origin: true
      authPlugins:
      - key: google
        baseUrl: http://magda-auth-google
      - key: internal
        baseUrl: http://magda-auth-internal
      - key: arcgis
        baseUrl: http://magda-auth-arcgis
      - key: facebook
        baseUrl: http://magda-auth-facebook

    registry-api:
      skipAuthorization: false

    correspondence-api:
      smtpPort: 2525
      smtpHostname: "smtp.mailgun.org"

    web-server:
      fallbackUrl: "https://data.gov.au"
      showNotificationBanner: false
      featureFlags:
        cataloguing: true
        publishToDga: false
        datasetApprovalWorkflowOn: false
        useStorageApi: true
      dateConfig:
        dateFormats:
          - YYYY
          - YYYY-MM
          - DD-MM-YYYY
          - MM-DD-YYYY
          - YYYY-MM-DD
          - YYYY-MM-DDThh:mmTZD
          - YYYY-MM-DDThh:mm:ssTZD
          - YYYY-MM-DDThh:mm:ss.sTZD
          - DD-MMM-YYYY
          - MMM-DD-YYYY
        dateRegexes:
            dateRegex: "(date|dt|year|decade)"
            startDateRegex: "(start|st).*(date|dt|year|decade)"
            endDateRegex: "(end).*(date|dt|year|decade)"
      showContactButtonForNoContactPointDataset: true

    elasticsearch:
      data:
        resources:
          limits:
            cpu: 1000m

tags:
  all: true
  correspondence-api: true
  connectors: false
  connector-dga: true

magda-auth-google:
  googleClientId: "275237095477-f7ej2gsvbl2alb8bcqcn7r5jk0ur719p.apps.googleusercontent.com"

magda-auth-arcgis:
  arcgisClientId: "d0MgVUbbg5Z6vmWo"

magda-auth-facebook:
  clientId: "173073926555600"