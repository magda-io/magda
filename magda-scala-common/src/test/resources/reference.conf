akka {
    coordinated-shutdown {
        phases {
            service-unbind {
                timeout = 5 s
            }
            service-requests-done {
                timeout = 10 s
            }
        }
    }

    http {
        # see https://doc.akka.io/docs/akka-http/current/configuration.html
        host-connection-pool {
            # max no.of parallels request from host connection pool
            max-connections = 4

            # max no.of pending requests allowed for the host connection pool.
            # we will make our request processing queue size same as this number.
            # When pending requests to the same host are over this number, oldest request will be dropped.
            # Must be a power of 2 and > 0!
            max-open-requests = 32

            # max no.of retries for failed requests
            max-retries = 5

            # The minimum duration to backoff new connection attempts after the previous connection attempt failed.
            base-connection-backoff = 100ms

            # Maximum backoff duration between failed connection attempts.
            max-connection-backoff = 10s
        }
    }
}

db-query {
    # the global timeout setting. i.e. it will impacts all queries
    # The setting will actually impact the postgresql client connection setting:
    # [statement_timeout](https://www.postgresql.org/docs/current/runtime-config-client.html#GUC-STATEMENT-TIMEOUT)
    # The value of setting should be longer than other timeout settings.
    global-timeout = "15m"

    # the default timeout setting used for most common queries that serve rest APIs.
    # we put it in place via DBSession.queryTimeout(seconds: Int)
    default-timeout = "180s"

    # Similar to `default-timeout`. But this setting allow us to use different (often longer) timeout settings for long queries.
    # e.g. Trim operations.
    long-query-timeout = "10m"

    # Full text search configuration. psql's \dF command shows all available configurations
    # Once the configuration changed, the index on recordaspects table should be recreated.
    # You can use the following SQL (with `new-config-name` replaced with the new text search config set here):
    # CREATE INDEX idx_data_full_text ON recordaspects
    # USING GIN (jsonb_to_tsvector('new-config-name'::regconfig, data, '["string"]'));
    text-search-config = "english"
}