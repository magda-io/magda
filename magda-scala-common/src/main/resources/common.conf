akka {
    coordinated-shutdown {
        phases {
            service-unbind {
                timeout = 5 s
            }
            service-requests-done {
                timeout = 10 s
            }
        }
    }
}

http {
    # the two steps (`waitBeforeTermination` & `hardTerminationDeadline`) both happen with `service-requests-done` phrase
    # Thus, total time of the two steps can't be longer than timeout of `service-requests-done` phase
    waitBeforeTermination = 2s
    hardTerminationDeadline = 8s
}

elasticSearch {
    serverUrl = "elasticsearch://localhost:9200"
    connectTimeout = 30000
    # In apache HC project source code:
    # https://github.com/apache/httpcomponents-core/blob/fa857dccf17d0c7a402139bda740d45490ba81bd/httpcore-nio/src/main/java/org/apache/http/impl/nio/reactor/AbstractIOReactor.java#L492
    # It actually measures the session time. i.e. elasticsearch must complete the request within this time
    # This should be a bigger value for the bulk request
    socketTimeout = 30000
    maxRetryTimeout = 30000

    indices {
        regions {
            version = 25
        }

        datasets {
            version = 49
        }

        publishers {
            version = 7
        }

        formats {
            version = 2
        }
    }
}

authorization {
  skipOpaQuery = false
}

auth {
    userId = "00000000-0000-4000-8000-000000000000"
}

authApi {
    baseUrl = "http://localhost:6104"
}

strings {
    unspecifiedWord = "Unspecified"
}

time {
    defaultOffset = "+10:00"
}

regionSources = {
    COUNTRY {
        url = "https://s3-ap-southeast-2.amazonaws.com/magda-files/custom/country.geojson"
        idField = "id"
        nameField = "name"
        order = 9
    }
    OFFSHORE_TERRITORIES {
        url = "https://s3-ap-southeast-2.amazonaws.com/magda-files/custom/off-shore-territories.geojson"
        idField = "id"
        nameField = "name"
        lv1Id = "2"
        order = 11
    }
    SA4 {
        url = "https://s3-ap-southeast-2.amazonaws.com/magda-files/SA4.geojson"
        idField = "SA4_CODE11"
        nameField = "SA4_NAME11"
        lv1Id = "1"
        lv2IdField = "STE_CODE11"
        order = 30
    }
    SA3 {
        url = "https://s3-ap-southeast-2.amazonaws.com/magda-files/SA3.geojson"
        idField = "SA3_CODE11"
        nameField = "SA3_NAME11"
        lv1Id = "1"
        lv2IdField = "STE_CODE11"
        lv3IdField = "SA4_CODE11"
        order = 40
    }
    SA2 {
        url = "https://s3-ap-southeast-2.amazonaws.com/magda-files/SA2.geojson"
        idField = "SA2_MAIN11"
        nameField = "SA2_NAME11"
        lv1Id = "1"
        lv2IdField = "STE_CODE11"
        lv3IdField = "SA4_CODE11"
        lv4IdField = "SA3_CODE11"
        order = 50
    }
    SA1 {
        url = "https://s3-ap-southeast-2.amazonaws.com/magda-files/SA1.geojson"
        idField = "SA1_MAIN11"
        nameField = "SA1_MAIN11",
        lv1Id = "1"
        lv2IdField = "STE_CODE11"
        lv3IdField = "SA4_CODE11"
        lv4IdField = "SA3_CODE11"
        lv5IdField = "SA2_MAIN11"
        includeIdInName = false,
        order = 60
    }
    LGA {
        url = "https://s3-ap-southeast-2.amazonaws.com/magda-files/LGA.geojson"
        idField = "LGA_CODE15"
        nameField = "LGA_NAME15"
        lv1Id = "1"
        steIdField = "STE_CODE11"
        order = 20
    }
    POA {
        url = "https://s3-ap-southeast-2.amazonaws.com/magda-files/POA.geojson"
        idField = "POA_CODE"
        nameField = "POA_NAME"
        lv1Id = "1"
        order = 70
    }
    COM_ELB_ID_2016 {
        url = "https://s3-ap-southeast-2.amazonaws.com/magda-files/COM_ELB_ID_2016.geojson"
        idField = "DIV_ID"
        nameField = "SORTNAME"
        lv1Id = "1"
        order = 80
    }
    STE {
        url = "https://s3-ap-southeast-2.amazonaws.com/magda-files/STE.simplified.geojson"
        idField = "STE_CODE11"
        nameField = "STE_NAME11"
        shortNameField = "STE_ABBREV"
        lv1Id = "1"
        order = 10
    }
}
